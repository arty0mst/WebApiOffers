// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace WebApiOffer.Migrations
{
    [DbContext(typeof(OfferStoreDbContext))]
    [Migration("20250716022222_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OfferEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "BMW",
                            Model = "530d",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            Brand = "BMW",
                            Model = "320i",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 3,
                            Brand = "BMW",
                            Model = "M2",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 4,
                            Brand = "BMW",
                            Model = "640i",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 5,
                            Brand = "BMW",
                            Model = "750Ld",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Porsche",
                            Model = "Panamera",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Porsche",
                            Model = "Cayenne",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Ford",
                            Model = "Mustang",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Dodge",
                            Model = "Challenger",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Dodge",
                            Model = "Charger",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 11,
                            Brand = "Land Rover",
                            Model = "Range Rover Velar",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 3
                        },
                        new
                        {
                            Id = 12,
                            Brand = "Land Rover",
                            Model = "Range Rove Sport",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 3
                        },
                        new
                        {
                            Id = 13,
                            Brand = "Toyota",
                            Model = "Land Cruiser 300",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 4
                        },
                        new
                        {
                            Id = 14,
                            Brand = "LiXiang",
                            Model = "L9",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 5
                        },
                        new
                        {
                            Id = 15,
                            Brand = "LiXiang",
                            Model = "L7",
                            RegistrationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 5
                        });
                });

            modelBuilder.Entity("SupplierEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "GermanCarsGroup"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "UsaCarsGroup"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "UkCarsGroup"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "JapanCarsGroup"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2025, 7, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "RuCarsGroup"
                        });
                });

            modelBuilder.Entity("OfferEntity", b =>
                {
                    b.HasOne("SupplierEntity", "Supplier")
                        .WithMany("Offers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SupplierEntity", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
